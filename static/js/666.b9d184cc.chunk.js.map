{"version":3,"file":"static/js/666.b9d184cc.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.js","redux/selectors.js","components/Loader/Loader.jsx","components/ContactsList/ContactsList.jsx","components/ContactsSearchName/ContactsSearchName.styled.js","components/ContactsSearchName/ContactsSearchName.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/PhoneBookForm/PhoneBookForm.styled.js","components/PhoneBookForm/PhoneBookForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 350px;\n`;\n\nexport const ListItem = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  padding: 3px 5px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  padding: 3px;\n  margin-left: 7px;\n  background-color: transparent;\n  border: 1px solid red;\n  border-radius: 4px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectToRenderContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, List, ListItem } from './ContactsList.styled';\nimport {\n  selectError,\n  selectIsLoading,\n  selectToRenderContacts,\n} from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contactsOperation';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contactsAfterFilter = useSelector(selectToRenderContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error === 'Rejected' ? (\n        <p>Something went wrong! Try again.</p>\n      ) : (\n        <List>\n          {contactsAfterFilter.map(contact => {\n            return (\n              <ListItem key={contact.id}>\n                {contact.name}: {contact.number}\n                <Button onClick={() => dispatch(deleteContact(contact.id))}>\n                  Delete\n                </Button>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Container } from './ContactsSearchName.styled';\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const ContactsSearchName = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Container>\n      <label>Find contacts by name</label>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(changeFilter(evt.target.value))}\n      ></input>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n`;\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsSearchName } from 'components/ContactsSearchName/ContactsSearchName';\nimport { Container } from './Contacts.styled';\n\nexport const Contacts = () => {\n  return (\n    <Container>\n      <h2>Contacts</h2>\n      <ContactsSearchName />\n      <ContactsList />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin: 0;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  width: 350px;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  max-width: 150px;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  color: #666666;\n  font-size: 15px;\n  font-weight: bold;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`;\n\nexport const FormContainer = styled.div`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport {\n  Button,\n  FormContainer,\n  Label,\n  StyledForm,\n} from './PhoneBookForm.styled';\n// import * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsOperation';\nimport { Typography } from '@mui/material';\n\n// const phoneBookSchema = Yup.object({\n//   name: Yup.string().required('Required!').min(2, 'Too short!'),\n//   number: Yup.number().required('Required!').min(10, 'Too short!'),\n// });\n\nexport const PhoneBookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <FormContainer>\n      <Typography component=\"h1\" variant=\"h2\" sx={{ marginBottom: '5px' }}>\n        Phonebook\n      </Typography>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        // validationSchema={phoneBookSchema}\n        onSubmit={(values, form) => {\n          console.log(values);\n          const isContactInBook = contacts.find(\n            contact => contact.name === values.name\n          );\n          if (isContactInBook) {\n            alert(`${values.name} is already in contacts.`);\n          } else {\n            dispatch(addContact(values));\n          }\n          form.resetForm();\n        }}\n      >\n        <StyledForm>\n          <Label>\n            <label>Name</label>\n            <Field type=\"name\" name=\"name\" required />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <Label>\n            <label>Number</label>\n            <Field\n              type=\"phone\"\n              name=\"number\"\n              placeholder=\"+XX(XXX)-XXX-XX-XX\"\n              required\n            />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </Label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </StyledForm>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import { Contacts } from 'components/Contacts/Contacts';\nimport { PhoneBookForm } from 'components/PhoneBookForm/PhoneBookForm';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <PhoneBookForm />\n      <Contacts />\n    </>\n  );\n}\n"],"names":["List","styled","ListItem","Button","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectToRenderContacts","createSelector","contact","name","toLowerCase","includes","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ContactsList","dispatch","useDispatch","loading","useSelector","contactsAfterFilter","useEffect","fetchContacts","map","number","onClick","deleteContact","id","Container","ContactsSearchName","type","value","onChange","evt","changeFilter","target","Contacts","StyledForm","Form","Label","FormContainer","PhoneBookForm","Typography","component","variant","sx","marginBottom","initialValues","onSubmit","values","form","console","log","find","alert","addContact","resetForm","required","placeholder","ContactsPage"],"sourceRoot":""}